{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erdem\\\\Desktop\\\\alertappfrontend\\\\src\\\\components\\\\getGraphic.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { CanvasJSChart, CanvasJS } from '../canvasjs.react';\nexport default class GetGraphic extends React.Component {\n  constructor() {\n    super();\n    this._isMounted = false;\n    this.state = {\n      alertName: '',\n      url: '',\n      method: '',\n      period: 0,\n      alertStatuses: []\n    };\n  }\n\n  render() {\n    let dps = this.state.alertStatuses.map(alertStatus => {\n      return {\n        x: new Date(alertStatus.alertDate),\n        y: alertStatus.status\n      };\n    });\n    let last_25_dps = dps.length < 10 ? [...dps] : [...dps.slice(dps.length - 10, dps.length)];\n    let options = {\n      title: {\n        text: \"Graph of \" + this.state.alertName.toUpperCase()\n      },\n      axisX: {\n        crosshair: {\n          enabled: false,\n          //Alttan gostermeli cubuk aktivitesi\n          snapToDataPoint: true,\n          thickness: 2,\n          lineDashType: \"longDashDotDot\"\n        },\n        labelFormatter: function (e) {\n          return CanvasJS.formatDate(e.value, \"DD MMM YY HH:mm:ss\");\n        },\n        labelAngle: -45,\n        title: \"Date\",\n        lineThickness: 2,\n        lineColor: \"#333\",\n        lineDashType: \"longDash\"\n      },\n      axisY: {\n        title: \"Alert Status\",\n        lineThickness: 2,\n        lineColor: \"#333\",\n        lineDashType: \"longDash\"\n      },\n      data: [{\n        xValueFormatString: \"HH:mm:ss\",\n        markerType: \"circle\",\n        //\"circle\", \"square\", \"cross\", \"none\"\n        markerSize: 10,\n        markerColor: \"#4CAF50\",\n        type: \"line\",\n        lineColor: \"#4CAF50\",\n        dataPoints: last_25_dps\n      }],\n      backgroundColor: \"whitesmoke\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph-infos mt-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Alert Name: \"), \" \", this.state.alertName), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Alert URL: \"), this.state.url), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Alert Period: \"), this.state.period), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Alert Method: \"), this.state.method)), React.createElement(\"div\", {\n      className: \"mt-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      className: \"myform\",\n      options: options,\n      onRef: ref => this.chart = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \" mt-10 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:3000/alertlist\",\n      className: \"graph-btn mt-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Back to list\")), React.createElement(\"div\", {\n      className: \" mt-10 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:3000\",\n      className: \"graph-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Back to home page\")));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Erdem\\Desktop\\alertappfrontend\\src\\components\\getGraphic.js"],"names":["React","axios","CanvasJSChart","CanvasJS","GetGraphic","Component","constructor","_isMounted","state","alertName","url","method","period","alertStatuses","render","dps","map","alertStatus","x","Date","alertDate","y","status","last_25_dps","length","slice","options","title","text","toUpperCase","axisX","crosshair","enabled","snapToDataPoint","thickness","lineDashType","labelFormatter","e","formatDate","value","labelAngle","lineThickness","lineColor","axisY","data","xValueFormatString","markerType","markerSize","markerColor","type","dataPoints","backgroundColor","ref","chart"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport {CanvasJSChart,CanvasJS} from '../canvasjs.react';\r\n\r\n\r\nexport default class GetGraphic extends React.Component{\r\n    _isMounted = false;\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n            alertName: '',\r\n            url: '',\r\n            method: '',\r\n            period: 0,\r\n            alertStatuses: []\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        let dps = this.state.alertStatuses.map((alertStatus) => {\r\n            return {x: new Date(alertStatus.alertDate), y: alertStatus.status}\r\n\r\n        });\r\n        let last_25_dps = ((dps.length < 10) ? [...dps] : [...dps.slice(dps.length - 10, dps.length)]);\r\n        let options = {\r\n            title: {\r\n                text: \"Graph of \" + (this.state.alertName).toUpperCase()\r\n\r\n            },\r\n            axisX: {\r\n                crosshair: {\r\n                    enabled: false, //Alttan gostermeli cubuk aktivitesi\r\n                    snapToDataPoint: true,\r\n                    thickness: 2,\r\n                    lineDashType: \"longDashDotDot\",\r\n                },\r\n\r\n                labelFormatter: function (e) {\r\n                    return CanvasJS.formatDate(e.value, \"DD MMM YY HH:mm:ss\");\r\n                },\r\n                labelAngle: -45,\r\n                title: \"Date\",\r\n                lineThickness: 2,\r\n                lineColor: \"#333\",\r\n                lineDashType: \"longDash\",\r\n            },\r\n            axisY: {\r\n                title: \"Alert Status\",\r\n                lineThickness: 2,\r\n                lineColor: \"#333\",\r\n                lineDashType: \"longDash\"\r\n            },\r\n            data: [{\r\n                xValueFormatString: \"HH:mm:ss\",\r\n                markerType: \"circle\",  //\"circle\", \"square\", \"cross\", \"none\"\r\n                markerSize: 10,\r\n                markerColor: \"#4CAF50\",\r\n                type: \"line\",\r\n                lineColor: \"#4CAF50\",\r\n                dataPoints: last_25_dps\r\n            }],\r\n            backgroundColor: \"whitesmoke\"\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"graph-infos mt-20\">\r\n                    <h3><i>Alert Name: </i> {this.state.alertName}</h3>\r\n                    <h3><i>Alert URL: </i>{this.state.url}</h3>\r\n                    <h3><i>Alert Period: </i>{this.state.period}</h3>\r\n                    <h3><i>Alert Method: </i>{this.state.method}</h3>\r\n                </div>\r\n                <div className=\"mt-20\">\r\n                    <CanvasJSChart className=\"myform\" options={options}\r\n                                   onRef={ref => this.chart = ref}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\" mt-10 \">\r\n                    <a href=\"http://localhost:3000/alertlist\" className=\"graph-btn mt-20\">Back to list</a>\r\n                </div>\r\n\r\n                <div className=\" mt-10 \">\r\n                    <a href=\"http://localhost:3000\" className=\"graph-btn\">Back to home page</a>\r\n                </div>\r\n                {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}